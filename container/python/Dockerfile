# Use an official Python runtime as a parent image
FROM python:3.10-slim-bullseye

# Set environment varibles
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install system dependencies
RUN apt-get update && apt-get install -y netcat

# Install poetry
RUN pip install "poetry==1.1.8"

# Set work directory
WORKDIR /app

# Copy only requirements to cache them in docker layer
COPY pyproject.toml poetry.lock /app/

# Project initialization:
RUN poetry config virtualenvs.create false \
  && poetry install --no-interaction --no-ansi

# Copy project
COPY . /app/

# Expose port
EXPOSE 8000

# Set the entrypoint
ENTRYPOINT ["poetry", "run"]

# Set the default command to start the app
CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]


# format auths
# {
# 	"auths": {
# 		"us-central1-docker.pkg.dev": ewoJCQkiYXV0aCI6ICJfanNvbl9rZXk6ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAibWFzaGFuei1zb2Z0d2FyZS1lbmdpbmVlcmluZyIsCiAgInByaXZhdGVfa2V5X2lkIjogIlhYWDdlMmM0ZTA5OTM5MThlOTU1OTkyY2M1ODUyN2QyYjkiLAogICJwcml2YXRlX2tleSI6ICItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cbk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRFowN21NUy9sajhpLzBcbjJuUmI3ZTFHWndVU1AxbmJJN1kvVG9FVTdOVFVJbjExQTZmY3pvQnJjT0hJaDErcHF5M01jcWl0d0VZckpaektcbkVaZFpwb2NwRUk2UmFhWDhLVDJKVkltdXN2QmRJdXg0cVNqREoxaW1tUkMrUzVNMjh3cnBJa0lZMDloOUtSM2tcblI3VFVyeHovdHhua2UxYWpLdHdwa0dTQllDMDJWbldRcEw3c0VRUjFOcXFCT3p4eWExN3IxdFdQMDhPTmFOeE9cbkNTRDZXRkxaMDMyYW1BeEV4RkFldTc1SE9DTWlkRGJjeTBxc0NrSFpTUU9QQmRLS2NqVW41ZWVWZUtZaXBLV1lcbjhvdXV1UEhsZ2FWTGovVmVoNGpOc09FeURhMlA3RHRjNWJ2dUdGaEJKc1hzcFdZRjM5L3AydkpPQU5xU2hYcUdcbmxERjFLNHlKQWdNQkFBRUNnZ0VBQWxWOFZ0Wm9qdGV5NzYySlRNMEEwTUR0aEpiNWxkMy9YUlRWTWNpQUUvK1FcbmowQjNzVC9lUm5TZm1BZFNRRFhsaUNVSnZqMDdzenpSVFRkbG9aTWZtY2tHNFVXc29Fd25RS2JWaUFRbStkblVcbkdVNmlCcmFEb1Raa2JhUTJ4ejlRMFdqZ2tscVo0SDgrMGkvNkt4TEtjdTVhY1RxVGEwdDBmdG1vRmFXQklNd21cbk9ZVjFTMDRvb1hQcFdLSTZnTGZQZmk1OTJ4RnBORVFVdUIvaVdnZGdWTmpqQzMwWGdvSEhFcmVZOGMxcjBxT0xcbk9sbFFXcDQ3TjFqYkM5WmNhRHNSbEFCQUxIZzNkRTBrcGxBWHpmNSs1Tk8vREk4aGxQbXZwbWxoclpybGN3TVVcbmR4b3ZWMWI2YWltbkxPbHkzSWVjTndTTVJvQ3pSWWdNbWNmUlVqYzZsUUtCZ1FEeWVyV00rWThjbS9DNi9DRWpcbjFLSGV6d2ZNekFOQ3d6MUsyZVM0c0I0YlZPbllvWk0yUHUvajhPSE9TeXNtN1NGSGFWY0U5ZzU2MFJFVXJtNWNcbkh3TE5ESFYvNHIrNzN1WE5DRjVnWGRDdy94MGd0VVlnaTVkdzYzY0duVi9xMmNGNWFURWl6MWNKYlZ3VTRkdkRcbmcvenlVWHJlTWdYOExJUVJBbHVzTFhzQW5RS0JnUURsK1IxWFVKck1OWitmZlZjMDlxM3JvTVpTdGhTbjgzQzNcbkt2dVVob1BRbnYyanRSZ3REOW0wcGIyT0daeTlWNHJGZW1JUjN5UE1DL1NFdEhHQ3NkbFFUb3A1R1lYRTFXRndcbmFoU2ZrRnFkMTZpM0pveEZJZk9ENjZpVFpTem53dmovaGdDMWllaUR2eWZ2dzFvd3Nrd2pXa1N3bkpnaHIyV0hcbll1SkxOTWlKM1FLQmdRQ2xrTzRZUldyWG9RN2R6anllcDVpamQzK2U4Z3FqOG9ZT2J2dUN0QmJLbU05WHNQUEFcbnpYYWxrSnZPYlhzWWlELzU3ODZRUDZhaGE5R2E2b1BHZVJKRGltZE1uRHBKQUtpdXVERWc0YzRXblF0NWd1MVFcbldhQmRaUm9QdFRPQ080K2s1Qk85N2c5REM1NGRVQjdyd0ZyZDVvN2IyeEpGSHV4S1pPN05nUHlFN1FLQmdRQ2lcbmJIcWpvNk5oSFhKNnc1em5KRjZiNy9hQ2ptVXlaY2F6SjZGK09pODVGa0hQOE9SOVZ4ZU05ZzVXSVpMSlM5NFFcbk1hcTRNcUJteWY3T0IxK3dUZ3BOSk51NlFpTnZiTUdnRXR3MEFsRnQ3OVlTWFNCdTUxYkZVcGpDV1pBSXRIVUdcbmk4OU9hSE9YTVZoMGg4WFlaT1ZQaHI3QytpYWNpL09xVmxXN2hqRW81UUtCZ0hYNFY1VmxmdEgvODF2WjVNRnlcbnNVYnQ5NXJ6OEtMVVN5S1JuWmN4dm9sZDRZYTN4bVI0djR0ZVZsU3EyWGFHYlpIU2JOTVVIZ1l5ZTZ3NzY3Mmhcbkp6ZGFHVWJXd1NWOTBvS2p0dk15OWppekJmOHB5VkJpa04zdHBIdEw2d0IwQkhsNG9ScTlwalZKb2lUR1pYNGpcbkgzY2dUTnBqbE8wLzQvTTRyQUJ1RkJHNlxuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxuIiwKICAiY2xpZW50X2VtYWlsIjogInNhQG1hc2hhbnotc29mdHdhcmUtZW5naW5lZXJpbmcuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJjbGllbnRfaWQiOiAiMjIyMDEzNjYyOTU0NjgyMzg3Nzk4IiwKICAiYXV0aF91cmkiOiAiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28vb2F1dGgyL2F1dGgiLAogICJ0b2tlbl91cmkiOiAiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW4iLAogICJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzIiwKICAiY2xpZW50X3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vcm9ib3QvdjEvbWV0YWRhdGEveDUwOS9nY3Itb254cC1zYSU0MG1hc2hhbnotc29mdHdhcmUtZW5naW5lZXJpbmcuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJ1bml2ZXJzZV9kb21haW4iOiAiZ29vZ2xlYXBpcy5jb20iCn0iCgkJfQ==
# 	}
# }

# using gar
# export GAR_SA_KEY=$(cat gar-sa-key.json | base64)
# echo $GAR_SA_KEY | base64 -d | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev
# cat gar-sa-key.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev